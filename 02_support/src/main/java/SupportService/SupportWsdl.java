
package SupportService;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SupportWsdl", targetNamespace = "Support")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SupportWsdl {


    /**
     * 
     * @param arg0
     * @return
     *     returns SupportService.TicketStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setTicketInProgress", targetNamespace = "Support", className = "SupportService.SetTicketInProgress")
    @ResponseWrapper(localName = "setTicketInProgressResponse", targetNamespace = "Support", className = "SupportService.SetTicketInProgressResponse")
    @Action(input = "Support/SupportWsdl/setTicketInProgressRequest", output = "Support/SupportWsdl/setTicketInProgressResponse")
    public TicketStatus setTicketInProgress(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTicket", targetNamespace = "Support", className = "SupportService.CreateTicket")
    @ResponseWrapper(localName = "createTicketResponse", targetNamespace = "Support", className = "SupportService.CreateTicketResponse")
    @Action(input = "Support/SupportWsdl/createTicketRequest", output = "Support/SupportWsdl/createTicketResponse")
    public int createTicket(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns SupportService.TicketStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "acceptTicket", targetNamespace = "Support", className = "SupportService.AcceptTicket")
    @ResponseWrapper(localName = "acceptTicketResponse", targetNamespace = "Support", className = "SupportService.AcceptTicketResponse")
    @Action(input = "Support/SupportWsdl/acceptTicketRequest", output = "Support/SupportWsdl/acceptTicketResponse")
    public TicketStatus acceptTicket(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns SupportService.TicketStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setTicketCompleted", targetNamespace = "Support", className = "SupportService.SetTicketCompleted")
    @ResponseWrapper(localName = "setTicketCompletedResponse", targetNamespace = "Support", className = "SupportService.SetTicketCompletedResponse")
    @Action(input = "Support/SupportWsdl/setTicketCompletedRequest", output = "Support/SupportWsdl/setTicketCompletedResponse")
    public TicketStatus setTicketCompleted(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns SupportService.TicketStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reopenTicket", targetNamespace = "Support", className = "SupportService.ReopenTicket")
    @ResponseWrapper(localName = "reopenTicketResponse", targetNamespace = "Support", className = "SupportService.ReopenTicketResponse")
    @Action(input = "Support/SupportWsdl/reopenTicketRequest", output = "Support/SupportWsdl/reopenTicketResponse")
    public TicketStatus reopenTicket(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns SupportService.TicketStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTicketStatus", targetNamespace = "Support", className = "SupportService.GetTicketStatus")
    @ResponseWrapper(localName = "getTicketStatusResponse", targetNamespace = "Support", className = "SupportService.GetTicketStatusResponse")
    @Action(input = "Support/SupportWsdl/getTicketStatusRequest", output = "Support/SupportWsdl/getTicketStatusResponse")
    public TicketStatus getTicketStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<SupportService.Ticket>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTickets", targetNamespace = "Support", className = "SupportService.GetTickets")
    @ResponseWrapper(localName = "getTicketsResponse", targetNamespace = "Support", className = "SupportService.GetTicketsResponse")
    @Action(input = "Support/SupportWsdl/getTicketsRequest", output = "Support/SupportWsdl/getTicketsResponse")
    public List<Ticket> getTickets();

}
